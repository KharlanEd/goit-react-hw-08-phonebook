{"version":3,"file":"static/js/983.8130c5f5.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/Phonebook.module.css?8f1e","components/Form.jsx","components/Listitem.jsx","components/ContactList.jsx","components/Filter.jsx","redux/Pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContactList = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const filtredContacts = () => {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    };\n    return filtredContacts().sort((a, b) => a.name.localeCompare(b.name));\n  }\n);","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__b90CW\",\"container_list\":\"Phonebook_container_list__A1c6+\",\"title\":\"Phonebook_title__yyhz0\",\"label\":\"Phonebook_label__cXhqu\",\"btn\":\"Phonebook_btn__Hoa61\",\"item\":\"Phonebook_item__w0GNC\",\"text\":\"Phonebook_text__3k-Lf\",\"error\":\"Phonebook_error__BraGH\"};","import { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/operations\";\nimport { selectContacts} from \"redux/selectors\";\nimport { Field, Form, Formik,ErrorMessage} from 'formik';\nimport { object, string, number } from 'yup';\nimport css from './Phonebook.module.css'\n\n\nexport function ContactForm () {\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    \n  \n    const handleSubmit = (values, { resetForm }) => {\n    \n       \n       console.log(values.number);\n      const normalizedName = values.name.toLowerCase();\n      const filtredContacts = contacts.find(\n        contact => contact.name.toLowerCase() === normalizedName\n      );\n        \n      if (filtredContacts) {\n        alert(`${values.name} is already in contacts.`);\n        return;\n      }\n\n    \n  \n      dispatch(\n        addContact({\n          name: values.name,\n          number: values.number,\n        })\n      );\n  \n      resetForm();\n    };\n  \n    const initialValues = { name: '', number: '' };\n    \n  const userSchema = object({\n    name: string().required(),\n    number: number().required().positive().integer(),\n  });\n    \n        return (\n            \n             <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={userSchema}\n      >\n        <Form\n    //  className={css.container}      \n            >\n                <label className={css.label} >\n                    Name\n                    <Field\n                        name=\"name\"\n                        // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        />\n                  <ErrorMessage className={css.error} component=\"div\" name=\"name\" />      \n                </label>\n                <label className={css.label} >\n                    Number\n                    <Field\n                        \n                        name=\"number\"\n                        // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\n                      \n                    />\n                    <ErrorMessage className={css.error} component=\"div\" name=\"number\" />\n                </label>\n                <button className={css.btn} type=\"submit\">Add contact</button>\n        </Form>\n        </Formik>\n        \n   ) }\n","\nimport css from './Phonebook.module.css'\n\n\nexport function ListItem ( {name, number, onDeleteItem}) {\n  \n    return (\n      <li className={css.item}>\n      <span className={css.text}>\n      {name}:{number}\n      \n      </span>\n      \n    <button\n      className={css.btn}          \n      onClick={onDeleteItem}\n      type=\"button\"\n      >\n      Delete\n      </button>\n      </li>)\n    \n};\n","import { useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/selectors\";\nimport { ListItem } from \"./Listitem\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\"; \nimport { selectFilter } from \"redux/selectors\";\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n// .includes(filter.toLowerCase()\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  // const filter = useSelector(getFilter);\n \n  const filter = useSelector(selectFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const onDeleteContact = id => dispatch(deleteContact(id))\n  \n  // const filtredContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter)\n  //   );\n  // };\n\n  // const visibleContacts = filtredContacts()\n  // const visibleContacts = contacts.filter(contact =>\n  //   contact.name.toLowerCase())\n \n  \n    return (\n      <ul >\n        {visibleContacts.map((contact, ) => (\n          <ListItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n            onDeleteItem={() => onDeleteContact(contact.id)}\n          />\n        ))}\n      </ul>\n    )\n  };\n\n     \n\n","import css from './Phonebook.module.css'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from 'redux/filterSlisce';\nimport {  selectContacts,\n  selectFilter,\n  selectFilteredContactList,} from '../redux/selectors';\n\n\nexport const Filter = () => {\nconst filter = useSelector(selectFilter);\nconst dispath = useDispatch();\nconst filteredContactsLength = useSelector(selectFilteredContactList).length;\n  const contactsLength = useSelector(selectContacts).length;\n\n  const onChange = e => {\n    console.log(e.target.value);\n    dispath(setFilter(e.target.value));\n    \n  }\n    \n \n  \n    return(\n <label>\n    <span className={css.title}>Find contact by name\n    {filteredContactsLength !== contactsLength && (\n          <>\n            :&nbsp;<b>{filteredContactsLength}</b>\n          </>\n        )}\n        <br />\n    </span>\n    <input\n      type=\"text\"\n      value={filter}\n      onChange={onChange}\n      name=\"filter\"\n      placeholder=\"Enter name\"\n    />\n        </label>\n    )\n}","import { useDispatch,useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/operations\";\nimport { selectContacts } from \"redux/selectors\";\nimport { ContactForm } from \"components/Form\";\nimport { ContactList } from \"components/ContactList\";\nimport { Filter } from \"components/Filter\";\nimport css from '../../components/Phonebook.module.css'\n\n\n\n\n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n  \n    const contacts = useSelector(selectContacts);\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n  \n    return (\n      <div className={css.container} >\n        <ContactForm />\n        <h3 >Contacts: {contacts.length}</h3>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectFilteredContactList","createSelector","normalizedFilter","toLowerCase","contact","name","includes","filtredContacts","sort","a","b","localeCompare","ContactForm","useSelector","dispatch","useDispatch","userSchema","object","string","required","number","positive","integer","_jsx","Formik","initialValues","onSubmit","values","_ref","resetForm","console","log","normalizedName","find","alert","concat","addContact","validationSchema","children","_jsxs","Form","className","css","Field","ErrorMessage","component","type","ListItem","onDeleteItem","onClick","ContactList","visibleContacts","getVisibleContacts","map","id","deleteContact","Filter","dispath","filteredContactsLength","length","contactsLength","_Fragment","value","onChange","e","target","setFilter","placeholder","Contacts","useEffect","fetchContacts"],"sourceRoot":""}